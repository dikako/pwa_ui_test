<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="6" total="85" passed="78">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="3335319" started-at="2020-06-26T08:19:12Z" finished-at="2020-06-26T09:14:48Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="3335319" started-at="2020-06-26T08:19:12Z" finished-at="2020-06-26T09:14:48Z">
      <class name="testcases.Test_Forget_Password">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="set" is-config="true" duration-ms="1259" started-at="2020-06-26T16:13:26Z" finished-at="2020-06-26T16:13:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="forget_password_alert" duration-ms="17496" started-at="2020-06-26T16:13:27Z" data-provider="forget_password_alert" finished-at="2020-06-26T16:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[email.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please Try Again Email Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forget_password_alert -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="done" is-config="true" duration-ms="383" started-at="2020-06-26T16:13:45Z" finished-at="2020-06-26T16:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forget_password_alert status=SUCCESS method=Test_Forget_Password.forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="set" is-config="true" duration-ms="1212" started-at="2020-06-26T16:13:45Z" finished-at="2020-06-26T16:13:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="forget_password_alert" duration-ms="20827" started-at="2020-06-26T16:13:46Z" data-provider="forget_password_alert" finished-at="2020-06-26T16:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[454546546565646]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please Try Again Phone Number Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forget_password_alert -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="done" is-config="true" duration-ms="341" started-at="2020-06-26T16:14:07Z" finished-at="2020-06-26T16:14:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forget_password_alert status=SUCCESS method=Test_Forget_Password.forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="set" is-config="true" duration-ms="1141" started-at="2020-06-26T16:14:08Z" finished-at="2020-06-26T16:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="forget_password_alert" duration-ms="19493" started-at="2020-06-26T16:14:09Z" data-provider="forget_password_alert" finished-at="2020-06-26T16:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iustrtqc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forget_password_alert -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="done" is-config="true" duration-ms="335" started-at="2020-06-26T16:14:28Z" finished-at="2020-06-26T16:14:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forget_password_alert status=SUCCESS method=Test_Forget_Password.forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="set" is-config="true" duration-ms="802" started-at="2020-06-26T16:14:28Z" finished-at="2020-06-26T16:14:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="forget_password_alert" duration-ms="18155" started-at="2020-06-26T16:14:29Z" data-provider="forget_password_alert" finished-at="2020-06-26T16:14:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082222992299]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forget_password_alert -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Forget_Password@305f7627]" name="done" is-config="true" duration-ms="371" started-at="2020-06-26T16:14:47Z" finished-at="2020-06-26T16:14:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forget_password_alert status=SUCCESS method=Test_Forget_Password.forget_password_alert(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Forget_Password@305f7627] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Forget_Password -->
      <class name="testcases.Test_Exclusive">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="701" started-at="2020-06-26T15:43:07Z" finished-at="2020-06-26T15:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_thumbnail()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_thumbnail" duration-ms="13409" started-at="2020-06-26T15:43:08Z" finished-at="2020-06-26T15:43:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_thumbnail -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="476" started-at="2020-06-26T15:43:21Z" finished-at="2020-06-26T15:43:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_thumbnail status=SUCCESS method=Test_Exclusive.exclusive_validate_thumbnail()[pri:0, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1114" started-at="2020-06-26T15:43:22Z" finished-at="2020-06-26T15:43:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_validate_thumbnail()[pri:1, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_validate_thumbnail" duration-ms="29711" started-at="2020-06-26T15:43:23Z" finished-at="2020-06-26T15:43:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_validate_thumbnail -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="461" started-at="2020-06-26T15:43:53Z" finished-at="2020-06-26T15:43:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_validate_thumbnail status=SUCCESS method=Test_Exclusive.integration_exclusive_validate_thumbnail()[pri:1, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1082" started-at="2020-06-26T15:43:53Z" finished-at="2020-06-26T15:43:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_list_share" duration-ms="17476" started-at="2020-06-26T15:43:54Z" data-provider="list_share" finished-at="2020-06-26T15:44:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[facebook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_list_share -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="454" started-at="2020-06-26T15:44:12Z" finished-at="2020-06-26T15:44:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_list_share status=SUCCESS method=Test_Exclusive.exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1195" started-at="2020-06-26T15:44:12Z" finished-at="2020-06-26T15:44:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_list_share" duration-ms="20455" started-at="2020-06-26T15:44:13Z" data-provider="list_share" finished-at="2020-06-26T15:44:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[twitter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_list_share -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="457" started-at="2020-06-26T15:44:34Z" finished-at="2020-06-26T15:44:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_list_share status=SUCCESS method=Test_Exclusive.exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1208" started-at="2020-06-26T15:44:34Z" finished-at="2020-06-26T15:44:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_list_share" duration-ms="14379" started-at="2020-06-26T15:44:36Z" data-provider="list_share" finished-at="2020-06-26T15:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[line]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_list_share -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="482" started-at="2020-06-26T15:44:50Z" finished-at="2020-06-26T15:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_list_share status=SUCCESS method=Test_Exclusive.exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1218" started-at="2020-06-26T15:44:50Z" finished-at="2020-06-26T15:44:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_list_share" duration-ms="20550" started-at="2020-06-26T15:44:52Z" data-provider="list_share" finished-at="2020-06-26T15:45:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_list_share -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="578" started-at="2020-06-26T15:45:12Z" finished-at="2020-06-26T15:45:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_list_share status=SUCCESS method=Test_Exclusive.exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1271" started-at="2020-06-26T15:45:13Z" finished-at="2020-06-26T15:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_validate_list_share" duration-ms="19642" started-at="2020-06-26T15:45:14Z" data-provider="list_share" finished-at="2020-06-26T15:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[whatsapp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_validate_list_share -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="458" started-at="2020-06-26T15:45:34Z" finished-at="2020-06-26T15:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_validate_list_share status=SUCCESS method=Test_Exclusive.exclusive_validate_list_share(java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1140" started-at="2020-06-26T15:45:34Z" finished-at="2020-06-26T15:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="7820" started-at="2020-06-26T15:45:35Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[All]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="538" started-at="2020-06-26T15:45:43Z" finished-at="2020-06-26T15:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1217" started-at="2020-06-26T15:45:44Z" finished-at="2020-06-26T15:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="14487" started-at="2020-06-26T15:45:45Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:45:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Clip]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="569" started-at="2020-06-26T15:45:59Z" finished-at="2020-06-26T15:46:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1254" started-at="2020-06-26T15:46:00Z" finished-at="2020-06-26T15:46:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="9237" started-at="2020-06-26T15:46:01Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Photo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="641" started-at="2020-06-26T15:46:10Z" finished-at="2020-06-26T15:46:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1099" started-at="2020-06-26T15:46:11Z" finished-at="2020-06-26T15:46:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="7124" started-at="2020-06-26T15:46:12Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:46:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Entertainment]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="582" started-at="2020-06-26T15:46:19Z" finished-at="2020-06-26T15:46:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1198" started-at="2020-06-26T15:46:20Z" finished-at="2020-06-26T15:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="3985" started-at="2020-06-26T15:46:21Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:46:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[News]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="400" started-at="2020-06-26T15:46:25Z" finished-at="2020-06-26T15:46:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1174" started-at="2020-06-26T15:46:25Z" finished-at="2020-06-26T15:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="4985" started-at="2020-06-26T15:46:27Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:46:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bloopers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="416" started-at="2020-06-26T15:46:32Z" finished-at="2020-06-26T15:46:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1198" started-at="2020-06-26T15:46:32Z" finished-at="2020-06-26T15:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu" duration-ms="5927" started-at="2020-06-26T15:46:33Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:46:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behind The Scenes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="441" started-at="2020-06-26T15:46:39Z" finished-at="2020-06-26T15:46:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1325" started-at="2020-06-26T15:46:40Z" finished-at="2020-06-26T15:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="25087" started-at="2020-06-26T15:46:41Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[All]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="404" started-at="2020-06-26T15:47:06Z" finished-at="2020-06-26T15:47:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1441" started-at="2020-06-26T15:47:06Z" finished-at="2020-06-26T15:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="18340" started-at="2020-06-26T15:47:08Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:47:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Clip]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="937" started-at="2020-06-26T15:47:26Z" finished-at="2020-06-26T15:47:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1461" started-at="2020-06-26T15:47:27Z" finished-at="2020-06-26T15:47:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="31707" started-at="2020-06-26T15:47:29Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:48:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Photo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="437" started-at="2020-06-26T15:48:00Z" finished-at="2020-06-26T15:48:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1242" started-at="2020-06-26T15:48:01Z" finished-at="2020-06-26T15:48:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="7083" started-at="2020-06-26T15:48:02Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:48:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Entertainment]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="386" started-at="2020-06-26T15:48:09Z" finished-at="2020-06-26T15:48:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1127" started-at="2020-06-26T15:48:09Z" finished-at="2020-06-26T15:48:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="14316" started-at="2020-06-26T15:48:11Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:48:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[News]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="488" started-at="2020-06-26T15:48:25Z" finished-at="2020-06-26T15:48:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1238" started-at="2020-06-26T15:48:25Z" finished-at="2020-06-26T15:48:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="10707" started-at="2020-06-26T15:48:27Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:48:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bloopers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="418" started-at="2020-06-26T15:48:37Z" finished-at="2020-06-26T15:48:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1143" started-at="2020-06-26T15:48:38Z" finished-at="2020-06-26T15:48:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1]" name="exclusive_list_tab_menu_klik" duration-ms="14257" started-at="2020-06-26T15:48:39Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:48:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behind The Scenes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="811" started-at="2020-06-26T15:48:53Z" finished-at="2020-06-26T15:48:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1112" started-at="2020-06-26T15:48:54Z" finished-at="2020-06-26T15:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="17896" started-at="2020-06-26T15:48:55Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:49:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[All]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="441" started-at="2020-06-26T15:49:13Z" finished-at="2020-06-26T15:49:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1921" started-at="2020-06-26T15:49:13Z" finished-at="2020-06-26T15:49:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="22711" started-at="2020-06-26T15:49:15Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:49:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Clip]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="617" started-at="2020-06-26T15:49:38Z" finished-at="2020-06-26T15:49:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1882" started-at="2020-06-26T15:49:39Z" finished-at="2020-06-26T15:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="19907" started-at="2020-06-26T15:49:41Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:50:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Photo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="621" started-at="2020-06-26T15:50:01Z" finished-at="2020-06-26T15:50:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="2054" started-at="2020-06-26T15:50:01Z" finished-at="2020-06-26T15:50:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="13532" started-at="2020-06-26T15:50:03Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:50:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Entertainment]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="410" started-at="2020-06-26T15:50:17Z" finished-at="2020-06-26T15:50:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1179" started-at="2020-06-26T15:50:17Z" finished-at="2020-06-26T15:50:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="18152" started-at="2020-06-26T15:50:18Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:50:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[News]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="428" started-at="2020-06-26T15:50:36Z" finished-at="2020-06-26T15:50:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1556" started-at="2020-06-26T15:50:37Z" finished-at="2020-06-26T15:50:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="13931" started-at="2020-06-26T15:50:38Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:50:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Bloopers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="413" started-at="2020-06-26T15:50:52Z" finished-at="2020-06-26T15:50:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="set" is-config="true" duration-ms="1354" started-at="2020-06-26T15:50:53Z" finished-at="2020-06-26T15:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1]" name="integration_exclusive_list_tab_menu_klik" duration-ms="13194" started-at="2020-06-26T15:50:54Z" data-provider="list_tab_menu_exclusive" finished-at="2020-06-26T15:51:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Behind The Scenes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_exclusive_list_tab_menu_klik -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Exclusive@3e34ace1]" name="done" is-config="true" duration-ms="756" started-at="2020-06-26T15:51:07Z" finished-at="2020-06-26T15:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_exclusive_list_tab_menu_klik status=SUCCESS method=Test_Exclusive.integration_exclusive_list_tab_menu_klik(java.lang.String, java.lang.String)[pri:5, instance:testcases.Test_Exclusive@3e34ace1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Exclusive -->
      <class name="testcases.Test_Register">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1254" started-at="2020-06-26T15:51:49Z" finished-at="2020-06-26T15:51:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="register_alert_email(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8]" name="register_alert_email" duration-ms="40069" started-at="2020-06-26T15:51:51Z" data-provider="register_email_alert" finished-at="2020-06-26T15:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[please try again, email has been taken]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '10.23.212.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.RJoJ0i}, goog:chromeOptions: {debuggerAddress: localhost:39075}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: 6ac070227db7284ae6663367f1a...}
Session ID: 6ac070227db7284ae6663367f1aae2da]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '10.23.212.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.RJoJ0i}, goog:chromeOptions: {debuggerAddress: localhost:39075}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: 6ac070227db7284ae6663367f1a...}
Session ID: 6ac070227db7284ae6663367f1aae2da
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
	at object.Alert.byId(Alert.java:23)
	at testcases.Test_Register.register_alert_email(Test_Register.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_alert_email -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="374" started-at="2020-06-26T15:52:31Z" finished-at="2020-06-26T15:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_alert_email status=FAILURE method=Test_Register.register_alert_email(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1266" started-at="2020-06-26T15:52:31Z" finished-at="2020-06-26T15:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_alert_email(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8]" name="register_alert_email" duration-ms="35899" started-at="2020-06-26T15:52:32Z" data-provider="register_email_alert" finished-at="2020-06-26T15:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rtgsfad.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please Try Again Email Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_alert_email -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="376" started-at="2020-06-26T15:53:08Z" finished-at="2020-06-26T15:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_alert_email status=SUCCESS method=Test_Register.register_alert_email(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1190" started-at="2020-06-26T15:53:09Z" finished-at="2020-06-26T15:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_email_alert_password1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8]" name="register_email_alert_password1" duration-ms="38847" started-at="2020-06-26T15:53:10Z" data-provider="register_password1_alert_email" finished-at="2020-06-26T15:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nteamqcdfard@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kurang]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kurang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must at least 8 characters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_email_alert_password1 -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="442" started-at="2020-06-26T15:53:49Z" finished-at="2020-06-26T15:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_email_alert_password1 status=SUCCESS method=Test_Register.register_email_alert_password1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1065" started-at="2020-06-26T15:53:49Z" finished-at="2020-06-26T15:53:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_email_alert_password2(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8]" name="register_email_alert_password2" duration-ms="36661" started-at="2020-06-26T15:53:50Z" data-provider="register_password2_alert_email" finished-at="2020-06-26T15:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nteamqcdfard@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[passwordBeda]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must match]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_email_alert_password2 -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="365" started-at="2020-06-26T15:54:27Z" finished-at="2020-06-26T15:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_email_alert_password2 status=SUCCESS method=Test_Register.register_email_alert_password2(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1263" started-at="2020-06-26T15:54:27Z" finished-at="2020-06-26T15:54:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_alert_phone(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8]" name="register_alert_phone" duration-ms="41700" started-at="2020-06-26T15:54:29Z" data-provider="register_phone_alert" finished-at="2020-06-26T15:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[00909089897897]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please Try Again Phone Number Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_alert_phone -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="357" started-at="2020-06-26T15:55:10Z" finished-at="2020-06-26T15:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_alert_phone status=SUCCESS method=Test_Register.register_alert_phone(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1219" started-at="2020-06-26T15:55:11Z" finished-at="2020-06-26T15:55:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_alert_phone(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8]" name="register_alert_phone" duration-ms="41898" started-at="2020-06-26T15:55:12Z" data-provider="register_phone_alert" finished-at="2020-06-26T15:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[82278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[please try again, phone has been taken]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_alert_phone -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="352" started-at="2020-06-26T15:55:54Z" finished-at="2020-06-26T15:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_alert_phone status=SUCCESS method=Test_Register.register_alert_phone(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1271" started-at="2020-06-26T15:55:54Z" finished-at="2020-06-26T15:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_phone_alert_password1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8]" name="register_phone_alert_password1" duration-ms="42172" started-at="2020-06-26T15:55:55Z" data-provider="register_password1_alert_phone" finished-at="2020-06-26T15:56:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[863436763543]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kurang]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kurang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must at least 8 characters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_phone_alert_password1 -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="355" started-at="2020-06-26T15:56:38Z" finished-at="2020-06-26T15:56:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_phone_alert_password1 status=SUCCESS method=Test_Register.register_phone_alert_password1(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1308" started-at="2020-06-26T15:56:38Z" finished-at="2020-06-26T15:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_phone_alert_password2(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8]" name="register_phone_alert_password2" duration-ms="44950" started-at="2020-06-26T15:56:39Z" data-provider="register_password2_alert_phone" finished-at="2020-06-26T15:57:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[84534343436]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[passwordBeda]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must match]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_phone_alert_password2 -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="342" started-at="2020-06-26T15:57:24Z" finished-at="2020-06-26T15:57:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_phone_alert_password2 status=SUCCESS method=Test_Register.register_phone_alert_password2(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1112" started-at="2020-06-26T15:57:25Z" finished-at="2020-06-26T15:57:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_page2_validate_birthday()[pri:4, instance:testcases.Test_Register@4f071df8]" name="register_page2_validate_birthday" duration-ms="55289" started-at="2020-06-26T15:57:26Z" finished-at="2020-06-26T15:58:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_page2_validate_birthday -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="347" started-at="2020-06-26T15:58:21Z" finished-at="2020-06-26T15:58:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_page2_validate_birthday status=SUCCESS method=Test_Register.register_page2_validate_birthday()[pri:4, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1329" started-at="2020-06-26T15:58:21Z" finished-at="2020-06-26T15:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_page2_validate_fullname()[pri:4, instance:testcases.Test_Register@4f071df8]" name="register_page2_validate_fullname" duration-ms="38901" started-at="2020-06-26T15:58:23Z" finished-at="2020-06-26T15:59:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_page2_validate_fullname -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="379" started-at="2020-06-26T15:59:01Z" finished-at="2020-06-26T15:59:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_page2_validate_fullname status=SUCCESS method=Test_Register.register_page2_validate_fullname()[pri:4, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1145" started-at="2020-06-26T15:59:02Z" finished-at="2020-06-26T15:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_page2_validate_gender_Male(java.lang.String)[pri:4, instance:testcases.Test_Register@4f071df8]" name="register_page2_validate_gender_Male" duration-ms="44322" started-at="2020-06-26T15:59:03Z" data-provider="register_list_gender" finished-at="2020-06-26T15:59:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_page2_validate_gender_Male -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="377" started-at="2020-06-26T15:59:47Z" finished-at="2020-06-26T15:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_page2_validate_gender_Male status=SUCCESS method=Test_Register.register_page2_validate_gender_Male(java.lang.String)[pri:4, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Register@4f071df8]" name="set" is-config="true" duration-ms="1173" started-at="2020-06-26T15:59:48Z" finished-at="2020-06-26T15:59:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="register_page2_validate_gender_Male(java.lang.String)[pri:4, instance:testcases.Test_Register@4f071df8]" name="register_page2_validate_gender_Male" duration-ms="48967" started-at="2020-06-26T15:59:49Z" data-provider="register_list_gender" finished-at="2020-06-26T16:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_page2_validate_gender_Male -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Register@4f071df8]" name="done" is-config="true" duration-ms="327" started-at="2020-06-26T16:00:38Z" finished-at="2020-06-26T16:00:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_page2_validate_gender_Male status=SUCCESS method=Test_Register.register_page2_validate_gender_Male(java.lang.String)[pri:4, instance:testcases.Test_Register@4f071df8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Register -->
      <class name="testcases.Test_Radio">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Radio@62fe6067]" name="set" is-config="true" duration-ms="1291" started-at="2020-06-26T15:51:08Z" finished-at="2020-06-26T15:51:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="radio_validate_url()[pri:0, instance:testcases.Test_Radio@62fe6067]" name="radio_validate_url" duration-ms="11615" started-at="2020-06-26T15:51:09Z" finished-at="2020-06-26T15:51:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radio_validate_url -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Radio@62fe6067]" name="done" is-config="true" duration-ms="492" started-at="2020-06-26T15:51:21Z" finished-at="2020-06-26T15:51:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=radio_validate_url status=SUCCESS method=Test_Radio.radio_validate_url()[pri:0, instance:testcases.Test_Radio@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Radio@62fe6067]" name="set" is-config="true" duration-ms="1083" started-at="2020-06-26T15:51:22Z" finished-at="2020-06-26T15:51:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="radio_integration()[pri:1, instance:testcases.Test_Radio@62fe6067]" name="radio_integration" duration-ms="18657" started-at="2020-06-26T15:51:23Z" finished-at="2020-06-26T15:51:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radio_integration -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Radio@62fe6067]" name="done" is-config="true" duration-ms="8045" started-at="2020-06-26T15:51:41Z" finished-at="2020-06-26T15:51:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=radio_integration status=SUCCESS method=Test_Radio.radio_integration()[pri:1, instance:testcases.Test_Radio@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Radio -->
      <class name="testcases.Test_Chat">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1161" started-at="2020-06-26T16:05:59Z" finished-at="2020-06-26T16:06:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea]" name="chat_test_before_login" duration-ms="71854" started-at="2020-06-26T16:06:00Z" data-provider="list_chat" finished-at="2020-06-26T16:07:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rcti]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_before_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="411" started-at="2020-06-26T16:07:12Z" finished-at="2020-06-26T16:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_before_login status=SUCCESS method=Test_Chat.chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="3166" started-at="2020-06-26T16:07:13Z" finished-at="2020-06-26T16:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea]" name="chat_test_before_login" duration-ms="69064" started-at="2020-06-26T16:07:16Z" data-provider="list_chat" finished-at="2020-06-26T16:08:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mnctv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_before_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="458" started-at="2020-06-26T16:08:25Z" finished-at="2020-06-26T16:08:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_before_login status=SUCCESS method=Test_Chat.chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1122" started-at="2020-06-26T16:08:25Z" finished-at="2020-06-26T16:08:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea]" name="chat_test_before_login" duration-ms="70076" started-at="2020-06-26T16:08:26Z" data-provider="list_chat" finished-at="2020-06-26T16:09:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gtv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_before_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="403" started-at="2020-06-26T16:09:36Z" finished-at="2020-06-26T16:09:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_before_login status=SUCCESS method=Test_Chat.chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1210" started-at="2020-06-26T16:09:37Z" finished-at="2020-06-26T16:09:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea]" name="chat_test_before_login" duration-ms="64416" started-at="2020-06-26T16:09:38Z" data-provider="list_chat" finished-at="2020-06-26T16:10:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[inews]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_before_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="478" started-at="2020-06-26T16:10:42Z" finished-at="2020-06-26T16:10:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_before_login status=SUCCESS method=Test_Chat.chat_test_before_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1344" started-at="2020-06-26T16:10:43Z" finished-at="2020-06-26T16:10:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea]" name="chat_test_after_login" duration-ms="35783" started-at="2020-06-26T16:10:44Z" data-provider="list_chat" finished-at="2020-06-26T16:11:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rcti]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at object.Input.byIdDisplay(Input.java:98)
	at testcases.Test_Chat.chat_test_after_login(Test_Chat.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_after_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="428" started-at="2020-06-26T16:11:20Z" finished-at="2020-06-26T16:11:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_after_login status=FAILURE method=Test_Chat.chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1195" started-at="2020-06-26T16:11:21Z" finished-at="2020-06-26T16:11:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea]" name="chat_test_after_login" duration-ms="43813" started-at="2020-06-26T16:11:22Z" data-provider="list_chat" finished-at="2020-06-26T16:12:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mnctv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at object.Input.byIdDisplay(Input.java:98)
	at testcases.Test_Chat.chat_test_after_login(Test_Chat.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_after_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="476" started-at="2020-06-26T16:12:06Z" finished-at="2020-06-26T16:12:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_after_login status=FAILURE method=Test_Chat.chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1280" started-at="2020-06-26T16:12:06Z" finished-at="2020-06-26T16:12:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea]" name="chat_test_after_login" duration-ms="40272" started-at="2020-06-26T16:12:07Z" data-provider="list_chat" finished-at="2020-06-26T16:12:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gtv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at object.Input.byIdDisplay(Input.java:98)
	at testcases.Test_Chat.chat_test_after_login(Test_Chat.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_after_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="440" started-at="2020-06-26T16:12:48Z" finished-at="2020-06-26T16:12:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_after_login status=FAILURE method=Test_Chat.chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Chat@47404bea]" name="set" is-config="true" duration-ms="1365" started-at="2020-06-26T16:12:48Z" finished-at="2020-06-26T16:12:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea]" name="chat_test_after_login" duration-ms="36096" started-at="2020-06-26T16:12:49Z" data-provider="list_chat" finished-at="2020-06-26T16:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[inews]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[dikakokodikakoko]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Selamat menonton semua!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at object.Input.byIdDisplay(Input.java:98)
	at testcases.Test_Chat.chat_test_after_login(Test_Chat.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chat_test_after_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Chat@47404bea]" name="done" is-config="true" duration-ms="492" started-at="2020-06-26T16:13:25Z" finished-at="2020-06-26T16:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chat_test_after_login status=FAILURE method=Test_Chat.chat_test_after_login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Chat@47404bea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Chat -->
      <class name="testcases.Test_Continue_Watching">
        <test-method status="SKIP" signature="continue_watching_after_login(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Continue_Watching@56ace400]" name="continue_watching_after_login" duration-ms="0" started-at="2020-06-26T16:05:59Z" finished-at="2020-06-26T16:05:59Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method continue_watching_after_login requires 2 parameters but 0 were supplied in the @Test annotation.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method continue_watching_after_login requires 2 parameters but 0 were supplied in the @Test annotation.
	at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:191)
	at org.testng.internal.Parameters.createParameters(Parameters.java:127)
	at org.testng.internal.Parameters.createParameters(Parameters.java:376)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:451)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continue_watching_after_login -->
      </class> <!-- testcases.Test_Continue_Watching -->
      <class name="testcases.Test_Login">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1240" started-at="2020-06-26T15:22:53Z" finished-at="2020-06-26T15:22:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_password" duration-ms="29730" started-at="2020-06-26T15:22:54Z" data-provider="login_alert_password" finished-at="2020-06-26T15:23:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Password Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_password -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="397" started-at="2020-06-26T15:23:24Z" finished-at="2020-06-26T15:23:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_password status=SUCCESS method=Test_Login.login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1183" started-at="2020-06-26T15:23:25Z" finished-at="2020-06-26T15:23:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_password" duration-ms="32914" started-at="2020-06-26T15:23:26Z" data-provider="login_alert_password" finished-at="2020-06-26T15:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Password Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_password -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="376" started-at="2020-06-26T15:23:59Z" finished-at="2020-06-26T15:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_password status=SUCCESS method=Test_Login.login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1330" started-at="2020-06-26T15:23:59Z" finished-at="2020-06-26T15:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_username" duration-ms="33019" started-at="2020-06-26T15:24:00Z" data-provider="login_alert_username" finished-at="2020-06-26T15:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Email Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_username -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="463" started-at="2020-06-26T15:24:34Z" finished-at="2020-06-26T15:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_username status=SUCCESS method=Test_Login.login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1749" started-at="2020-06-26T15:24:34Z" finished-at="2020-06-26T15:24:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_username" duration-ms="31834" started-at="2020-06-26T15:24:36Z" data-provider="login_alert_username" finished-at="2020-06-26T15:25:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8767868768768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Phone Number Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_username -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="394" started-at="2020-06-26T15:25:08Z" finished-at="2020-06-26T15:25:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_username status=SUCCESS method=Test_Login.login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1249" started-at="2020-06-26T15:25:08Z" finished-at="2020-06-26T15:25:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_popup" duration-ms="31633" started-at="2020-06-26T15:25:09Z" data-provider="login_alert_popup" finished-at="2020-06-26T15:25:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dixosgadpoyt@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_popup -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="371" started-at="2020-06-26T15:25:41Z" finished-at="2020-06-26T15:25:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_popup status=SUCCESS method=Test_Login.login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1206" started-at="2020-06-26T15:25:41Z" finished-at="2020-06-26T15:25:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_alert_popup" duration-ms="29594" started-at="2020-06-26T15:25:43Z" data-provider="login_alert_popup" finished-at="2020-06-26T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[628229098776544]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_popup -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="373" started-at="2020-06-26T15:26:12Z" finished-at="2020-06-26T15:26:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_alert_popup status=SUCCESS method=Test_Login.login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1253" started-at="2020-06-26T15:26:13Z" finished-at="2020-06-26T15:26:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_Continue_Watching(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_Continue_Watching" duration-ms="91122" started-at="2020-06-26T15:26:14Z" data-provider="login_success" finished-at="2020-06-26T15:27:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_Continue_Watching -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="448" started-at="2020-06-26T15:27:45Z" finished-at="2020-06-26T15:27:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_Continue_Watching status=SUCCESS method=Test_Login.login_logout_from_Continue_Watching(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1332" started-at="2020-06-26T15:27:45Z" finished-at="2020-06-26T15:27:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_Continue_Watching(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_Continue_Watching" duration-ms="97748" started-at="2020-06-26T15:27:47Z" data-provider="login_success" finished-at="2020-06-26T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_Continue_Watching -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="401" started-at="2020-06-26T15:29:25Z" finished-at="2020-06-26T15:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_Continue_Watching status=SUCCESS method=Test_Login.login_logout_from_Continue_Watching(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1382" started-at="2020-06-26T15:29:25Z" finished-at="2020-06-26T15:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_account" duration-ms="98189" started-at="2020-06-26T15:29:26Z" data-provider="login_success" finished-at="2020-06-26T15:31:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_account -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="357" started-at="2020-06-26T15:31:05Z" finished-at="2020-06-26T15:31:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_account status=SUCCESS method=Test_Login.login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1196" started-at="2020-06-26T15:31:05Z" finished-at="2020-06-26T15:31:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_account" duration-ms="103528" started-at="2020-06-26T15:31:06Z" data-provider="login_success" finished-at="2020-06-26T15:32:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_account -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="376" started-at="2020-06-26T15:32:50Z" finished-at="2020-06-26T15:32:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_account status=SUCCESS method=Test_Login.login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1143" started-at="2020-06-26T15:32:50Z" finished-at="2020-06-26T15:32:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_history" duration-ms="90541" started-at="2020-06-26T15:32:51Z" data-provider="login_success" finished-at="2020-06-26T15:34:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_history -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="350" started-at="2020-06-26T15:34:22Z" finished-at="2020-06-26T15:34:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_history status=SUCCESS method=Test_Login.login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1171" started-at="2020-06-26T15:34:22Z" finished-at="2020-06-26T15:34:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_history" duration-ms="92104" started-at="2020-06-26T15:34:23Z" data-provider="login_success" finished-at="2020-06-26T15:35:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_history -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="428" started-at="2020-06-26T15:35:55Z" finished-at="2020-06-26T15:35:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_history status=SUCCESS method=Test_Login.login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1280" started-at="2020-06-26T15:35:56Z" finished-at="2020-06-26T15:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_mylist(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_mylist" duration-ms="89289" started-at="2020-06-26T15:35:57Z" data-provider="login_success" finished-at="2020-06-26T15:37:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_mylist -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="373" started-at="2020-06-26T15:37:26Z" finished-at="2020-06-26T15:37:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_mylist status=SUCCESS method=Test_Login.login_logout_from_mylist(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1322" started-at="2020-06-26T15:37:27Z" finished-at="2020-06-26T15:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_mylist(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout_from_mylist" duration-ms="95107" started-at="2020-06-26T15:37:28Z" data-provider="login_success" finished-at="2020-06-26T15:39:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_mylist -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="385" started-at="2020-06-26T15:39:03Z" finished-at="2020-06-26T15:39:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout_from_mylist status=SUCCESS method=Test_Login.login_logout_from_mylist(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1329" started-at="2020-06-26T15:39:04Z" finished-at="2020-06-26T15:39:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@6e1d8f9e]" name="login_succes" duration-ms="39593" started-at="2020-06-26T15:39:05Z" data-provider="login_success" finished-at="2020-06-26T15:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_succes -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="710" started-at="2020-06-26T15:39:45Z" finished-at="2020-06-26T15:39:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_succes status=SUCCESS method=Test_Login.login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1289" started-at="2020-06-26T15:39:45Z" finished-at="2020-06-26T15:39:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@6e1d8f9e]" name="login_succes" duration-ms="45241" started-at="2020-06-26T15:39:47Z" data-provider="login_success" finished-at="2020-06-26T15:40:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_succes -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="510" started-at="2020-06-26T15:40:32Z" finished-at="2020-06-26T15:40:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_succes status=SUCCESS method=Test_Login.login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1186" started-at="2020-06-26T15:40:32Z" finished-at="2020-06-26T15:40:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout" duration-ms="72773" started-at="2020-06-26T15:40:34Z" data-provider="login_success" finished-at="2020-06-26T15:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="375" started-at="2020-06-26T15:41:46Z" finished-at="2020-06-26T15:41:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout status=SUCCESS method=Test_Login.login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="set" is-config="true" duration-ms="1609" started-at="2020-06-26T15:41:47Z" finished-at="2020-06-26T15:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@6e1d8f9e]" name="login_logout" duration-ms="78555" started-at="2020-06-26T15:41:48Z" data-provider="login_success" finished-at="2020-06-26T15:43:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Login@6e1d8f9e]" name="done" is-config="true" duration-ms="375" started-at="2020-06-26T15:43:07Z" finished-at="2020-06-26T15:43:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_logout status=SUCCESS method=Test_Login.login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@6e1d8f9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Login -->
      <class name="testcases.Test_Mylist">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Mylist@553f1d75]" name="set" is-config="true" duration-ms="2173" started-at="2020-06-26T15:19:14Z" finished-at="2020-06-26T15:19:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="mylist_after_login_library(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Mylist@553f1d75]" name="mylist_after_login_library" duration-ms="90884" started-at="2020-06-26T15:19:16Z" data-provider="mylist" finished-at="2020-06-26T15:20:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//strong[contains(text(),'Test Movie 2 hoho')]"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '10.23.212.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.CA6sZh}, goog:chromeOptions: {debuggerAddress: localhost:45275}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: e320b15747244662579350cd0a1...}
Session ID: e320b15747244662579350cd0a1de748
*** Element info: {Using=xpath, value=//strong[contains(text(),'Test Movie 2 hoho')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//strong[contains(text(),'Test Movie 2 hoho')]"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '10.23.212.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.CA6sZh}, goog:chromeOptions: {debuggerAddress: localhost:45275}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: e320b15747244662579350cd0a1...}
Session ID: e320b15747244662579350cd0a1de748
*** Element info: {Using=xpath, value=//strong[contains(text(),'Test Movie 2 hoho')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at object.Button.byXpath(Button.java:31)
	at testcases.Test_Mylist.mylist_after_login_library(Test_Mylist.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mylist_after_login_library -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Mylist@553f1d75]" name="done" is-config="true" duration-ms="512" started-at="2020-06-26T15:20:47Z" finished-at="2020-06-26T15:20:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mylist_after_login_library status=FAILURE method=Test_Mylist.mylist_after_login_library(java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Mylist@553f1d75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Mylist@553f1d75]" name="set" is-config="true" duration-ms="1286" started-at="2020-06-26T15:20:47Z" finished-at="2020-06-26T15:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="integration_mylist_after_login_library(java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Mylist@553f1d75]" name="integration_mylist_after_login_library" duration-ms="123573" started-at="2020-06-26T15:20:49Z" data-provider="mylist" finished-at="2020-06-26T15:22:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration_mylist_after_login_library -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_Mylist@553f1d75]" name="done" is-config="true" duration-ms="1019" started-at="2020-06-26T15:22:52Z" finished-at="2020-06-26T15:22:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=integration_mylist_after_login_library status=SUCCESS method=Test_Mylist.integration_mylist_after_login_library(java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Mylist@553f1d75] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Mylist -->
      <class name="testcases.Test_List_Menu_Account">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1188" started-at="2020-06-26T16:00:38Z" finished-at="2020-06-26T16:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_login()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_login" duration-ms="38499" started-at="2020-06-26T16:00:39Z" finished-at="2020-06-26T16:01:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="442" started-at="2020-06-26T16:01:18Z" finished-at="2020-06-26T16:01:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_login status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_login()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1383" started-at="2020-06-26T16:01:18Z" finished-at="2020-06-26T16:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_scan_qrcode()[pri:1, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_scan_qrcode" duration-ms="13613" started-at="2020-06-26T16:01:20Z" finished-at="2020-06-26T16:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_scan_qrcode -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="374" started-at="2020-06-26T16:01:33Z" finished-at="2020-06-26T16:01:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_scan_qrcode status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_scan_qrcode()[pri:1, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1195" started-at="2020-06-26T16:01:34Z" finished-at="2020-06-26T16:01:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_popup_login" duration-ms="34007" started-at="2020-06-26T16:01:35Z" data-provider="list_menu_account_popup_login" finished-at="2020-06-26T16:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[history]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sign Up]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign In]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_popup_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="360" started-at="2020-06-26T16:02:09Z" finished-at="2020-06-26T16:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_popup_login status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1292" started-at="2020-06-26T16:02:09Z" finished-at="2020-06-26T16:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_popup_login" duration-ms="36699" started-at="2020-06-26T16:02:11Z" data-provider="list_menu_account_popup_login" finished-at="2020-06-26T16:02:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mylist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sign Up]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign In]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_popup_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="447" started-at="2020-06-26T16:02:47Z" finished-at="2020-06-26T16:02:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_popup_login status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1287" started-at="2020-06-26T16:02:48Z" finished-at="2020-06-26T16:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_popup_login" duration-ms="31424" started-at="2020-06-26T16:02:49Z" data-provider="list_menu_account_popup_login" finished-at="2020-06-26T16:03:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[continue-watching]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sign Up]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign In]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_popup_login -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="414" started-at="2020-06-26T16:03:20Z" finished-at="2020-06-26T16:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_popup_login status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_popup_login(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1132" started-at="2020-06-26T16:03:21Z" finished-at="2020-06-26T16:03:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_menu_direct" duration-ms="29605" started-at="2020-06-26T16:03:22Z" data-provider="list_menu_account_direct" finished-at="2020-06-26T16:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tnc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terms and Conditions]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_menu_direct -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="514" started-at="2020-06-26T16:03:52Z" finished-at="2020-06-26T16:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_menu_direct status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1110" started-at="2020-06-26T16:03:52Z" finished-at="2020-06-26T16:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_menu_direct" duration-ms="27911" started-at="2020-06-26T16:03:53Z" data-provider="list_menu_account_direct" finished-at="2020-06-26T16:04:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[privacy-policy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Privacy Policy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_menu_direct -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="432" started-at="2020-06-26T16:04:21Z" finished-at="2020-06-26T16:04:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_menu_direct status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1579" started-at="2020-06-26T16:04:22Z" finished-at="2020-06-26T16:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_menu_direct" duration-ms="30545" started-at="2020-06-26T16:04:23Z" data-provider="list_menu_account_direct" finished-at="2020-06-26T16:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[contact-us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Contact Us]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_menu_direct -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="377" started-at="2020-06-26T16:04:54Z" finished-at="2020-06-26T16:04:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_menu_direct status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1402" started-at="2020-06-26T16:04:54Z" finished-at="2020-06-26T16:04:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_menu_direct" duration-ms="27245" started-at="2020-06-26T16:04:56Z" data-provider="list_menu_account_direct" finished-at="2020-06-26T16:05:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[faq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Faq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_menu_direct -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="418" started-at="2020-06-26T16:05:23Z" finished-at="2020-06-26T16:05:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_menu_direct status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_menu_direct(java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="set" is-config="true" duration-ms="1328" started-at="2020-06-26T16:05:23Z" finished-at="2020-06-26T16:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="menu_account_not_login_button_download()[pri:4, instance:testcases.Test_List_Menu_Account@4de41af9]" name="menu_account_not_login_button_download" duration-ms="34178" started-at="2020-06-26T16:05:25Z" finished-at="2020-06-26T16:05:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menu_account_not_login_button_download -->
        <test-method status="PASS" signature="done(org.testng.ITestResult)[pri:0, instance:testcases.Test_List_Menu_Account@4de41af9]" name="done" is-config="true" duration-ms="378" started-at="2020-06-26T16:05:59Z" finished-at="2020-06-26T16:05:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=menu_account_not_login_button_download status=SUCCESS method=Test_List_Menu_Account.menu_account_not_login_button_download()[pri:4, instance:testcases.Test_List_Menu_Account@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_List_Menu_Account -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
